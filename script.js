// === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ ===
function openTab(tabId) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
  const allTabs = document.querySelectorAll('.tab-content');
  allTabs.forEach(tab => tab.style.display = 'none');

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
  const activeTab = document.getElementById(tabId);
  if (activeTab) {
    activeTab.style.display = 'block';
  }
}

// === –õ–æ–≥–∏–∫–∞ —Ç–µ—Å—Ç–∞ ===
document.addEventListener("DOMContentLoaded", () => {
  let totalScore = 0;
  let answeredQuestions = 0;
  const totalQuestions = document.querySelectorAll("#ecoTestForm .question").length;

  const questions = document.querySelectorAll("#ecoTestForm .question");

  questions.forEach(question => {
    const checkboxes = question.querySelectorAll("input[type='checkbox']");
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener("change", () => {
        if (checkbox.checked) {
          totalScore += parseInt(checkbox.value);
          answeredQuestions++;

          // –û—Ç–º–µ—á–∞–µ–º –≤–æ–ø—Ä–æ—Å –∫–∞–∫ "–ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π"
          question.classList.add("completed");

          // –î–µ–ª–∞–µ–º –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –≤–Ω—É—Ç—Ä–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏
          checkboxes.forEach(cb => cb.disabled = true);

          // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          document.getElementById("result").textContent = `${totalScore} –±–∞–ª–ª–æ–≤`;

          // –ï—Å–ª–∏ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ–π–¥–µ–Ω—ã ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          if (answeredQuestions === totalQuestions) {
            let resultMessage = "";

            if (totalScore <= 15) {
              resultMessage = "üå± –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ –Ω–∏–∑–∫–∏–π! –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.";
            } else if (totalScore <= 30) {
              resultMessage = "üåç –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ —Å—Ä–µ–¥–Ω–∏–π. –ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ–¥—É–º–∞—Ç—å ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤.";
            } else {
              resultMessage = "üî• –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ –≤—ã—Å–æ–∫–∏–π! –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏, —á—Ç–æ–±—ã —É–º–µ–Ω—å—à–∏—Ç—å –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É.";
            }

            document.getElementById("resultText").textContent = resultMessage;
          }
        }
      });
    });
  });
});


// === –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
document.addEventListener("DOMContentLoaded", () => {
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É (–ì–ª–∞–≤–Ω–∞—è)
  openTab('main');
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
  initTest();
// === –ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è ===
function initMap() {
  // –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç—É
  const map = L.map('map').setView([43.238949, 76.889709], 12); // —Ü–µ–Ω—Ç—Ä –ê–ª–º–∞—Ç—ã (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å)

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–ª–æ–π –∫–∞—Ä—Ç—ã
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '¬© OpenStreetMap'
  }).addTo(map);

  // –ú–∞—Å—Å–∏–≤ –æ—Ü–µ–Ω–æ–∫ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è
  let pollutionData = [];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
  function addRating(lat, lng, score, area) {
    const colors = ["green", "lime", "yellow", "orange", "red"];
    const color = colors[score - 1];

    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
    L.circleMarker([lat, lng], {
      radius: 8,
      color: color,
      fillColor: color,
      fillOpacity: 0.8
    }).addTo(map).bindPopup(`${area}: ${score}/5`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    pollutionData.push({ area, score });

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    updateRating();
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
  function updateRating() {
    const ratingList = document.getElementById("ratingList");
    ratingList.innerHTML = "";

    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–∞–º
    const grouped = {};
    pollutionData.forEach(item => {
      if (!grouped[item.area]) grouped[item.area] = [];
      grouped[item.area].push(item.score);
    });

    // –°—Ä–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
    const averages = Object.keys(grouped).map(area => {
      const scores = grouped[area];
      const avg = scores.reduce((a, b) => a + b, 0) / scores.length;
      return { area, avg: avg.toFixed(1) };
    });

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –≥—Ä—è–∑–Ω—ã—Ö –∫ —á–∏—Å—Ç—ã–º
    averages.sort((a, b) => b.avg - a.avg);

    // –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
    averages.forEach(item => {
      const li = document.createElement("li");
      li.textContent = `${item.area}: ${item.avg}/5`;
      ratingList.appendChild(li);
    });
  }

  // –ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫
  addRating(43.25, 76.9, 5, "–¶–µ–Ω—Ç—Ä");
  addRating(43.24, 76.85, 3, "–ê—É—ç–∑–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω");
  addRating(43.22, 76.95, 2, "–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω");

  // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç—É ‚Äî –∑–∞–ø—Ä–æ—Å–∏—Ç—å –æ—Ü–µ–Ω–∫—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  map.on("click", e => {
    const score = prompt("–û—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è (1-5):");
    if (score >= 1 && score <= 5) {
      const area = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–∞:");
      addRating(e.latlng.lat, e.latlng.lng, parseInt(score), area || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–π–æ–Ω");
    }
  });
}

// === –ó–∞–ø—É—Å–∫ –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
document.addEventListener("DOMContentLoaded", () => {
  initMap();
});
});

