// === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ===
const recommendationsConfig = {
    'no_sorting': {
        triggers: ['q7_-10', 'q7_-15'],
        message: '‚ôªÔ∏è –í–∞–∂–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º—É—Å–æ—Ä! –ù–∞—á–Ω–∏—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞—Å—Ç–∏–∫–∞, –±—É–º–∞–≥–∏ –∏ —Å—Ç–µ–∫–ª–∞. –≠—Ç–æ —É–º–µ–Ω—å—à–∞–µ—Ç –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ—Å—É—Ä—Å—ã.',
        action: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ –Ω–∞ –∫–∞—Ä—Ç–µ'
    },
    'no_recycling': {
        triggers: ['q7_-10'],
        message: 'üì¶ –°–¥–∞—á–∞ –±–∞–Ω–æ–∫ –∏ –±—É—Ç—ã–ª–æ–∫ –ø–æ–º–æ–≥–∞–µ—Ç –ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Å–æ–∫—Ä–∞—â–∞–µ—Ç –æ—Ç—Ö–æ–¥—ã –Ω–∞ —Å–≤–∞–ª–∫–∞—Ö.',
        action: '–£–∑–Ω–∞—Ç—å –æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–µ'
    },
    'high_energy': {
        triggers: ['q2_120'],
        message: 'üí° –û—Ç–æ–ø–ª–µ–Ω–∏–µ —É–≥–ª–µ–º/–≥–∞–∑–æ–º —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏.',
        action: '–°–æ–≤–µ—Ç—ã –ø–æ —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏—é'
    },
    'meat_daily': {
        triggers: ['q4_85'],
        message: 'üå± –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –º—è—Å–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã.',
        action: '–†–µ—Ü–µ–ø—Ç—ã –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏—Ö –±–ª—é–¥'
    },
    'big_car': {
        triggers: ['q3_75'],
        message: 'üöó –ë–æ–ª—å—à–∏–µ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∏ –ø–æ—Ç—Ä–µ–±–ª—è—é—Ç –º–Ω–æ–≥–æ —Ç–æ–ø–ª–∏–≤–∞. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –±–æ–ª–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.',
        action: '–û–± —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ'
    }
};

// === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ ===
function openTab(tabId) {
    // —Å–∫—Ä—ã—Ç—å –≤—Å–µ
    document.querySelectorAll(".tab-content").forEach(tab => {
        tab.style.display = "none";
    });

    // –ø–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—É—é
    const activeTab = document.getElementById(tabId);
    if (activeTab) {
        activeTab.style.display = "block";

        // –µ—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—Ç–∞ ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (tabId === "ecoMap") {
            initMap();
        }
        
        // –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ—Å—Ç - —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
        if (tabId === "test") {
            resetTest();
        }
    }
}

// === –õ–æ–≥–∏–∫–∞ —Ç–µ—Å—Ç–∞ ===
function initTest() {
    let totalScore = 0;
    const totalQuestions = document.querySelectorAll("#ecoTestForm .question").length;
    let answeredQuestions = new Set();

    const questions = document.querySelectorAll("#ecoTestForm .question");
    const finishButton = document.getElementById('finishTest');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    finishButton.addEventListener('click', finishTest);

    questions.forEach(question => {
        const checkboxes = question.querySelectorAll("input[type='checkbox']");

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener("change", () => {
                const value = parseInt(checkbox.value);

                if (checkbox.checked) {
                    totalScore += value;
                } else {
                    totalScore -= value;
                }

                if ([...checkboxes].some(cb => cb.checked)) {
                    answeredQuestions.add(question.dataset.question);
                    question.classList.add("completed");
                } else {
                    answeredQuestions.delete(question.dataset.question);
                    question.classList.remove("completed");
                }

                document.getElementById("result").textContent = `${totalScore} –±–∞–ª–ª–æ–≤`;
            });
        });
    });
}

// === –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞ ===
function finishTest() {
    const totalScore = parseInt(document.getElementById("result").textContent);
    const finalScore = totalScore + 100;
    
    document.getElementById("result").textContent = `${finalScore} –±–∞–ª–ª–æ–≤`;
    document.getElementById("resultBox").style.display = "block";

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞—à –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    let resultMessage = "";
    if (finalScore <= 190) {
        resultMessage = "üå± –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ –Ω–∏–∑–∫–∏–π–ï—Å–ª–∏ –±—ã –≤—Å –ª—é–¥–∏ –∂–∏–ª–∏ —Ç–∞–∫, –∫–∞–∫ –≤—ã, –Ω–∞–º —Ö–≤–∞—Ç–∏–ª–æ –±—ã –æ–¥–Ω–æ–π –ø–ª–∞–Ω–µ—Ç—ã";
    } else if (finalScore <= 300) {
        resultMessage = "üåç –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ —Å—Ä–µ–¥–Ω–∏–π. –ï—Å–ª–∏ –±—ã –≤—Å–µ –ª—é–¥–∏ –∂–∏–ª–∏ —Ç–∞–∫–∂–µ –∫–∞–∫ –≤—ã, –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å –±—ã –±–æ–ª–µ–µ –æ–¥–Ω–æ–π –ø–ª–∞–Ω–µ—Ç—ã";
    } else {
        resultMessage = "üî• –í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥ –≤—ã—Å–æ–∫–∏–π! –ï—Å–ª–∏ –±—ã –≤—Å–µ –ª—é–¥–∏ –∂–∏–ª–∏ —Ç–∞–∫, –∫–∞–∫ –≤—ã, –Ω–∞–º –±—ã –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å 2 –∏ –±–æ–ª–µ–µ –ø–ª–∞–Ω–µ—Ç –¥–ª—è –∂–∏–∑–Ω–∏";
    }
    
    document.getElementById("resultText").textContent = resultMessage;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    showRecommendations();
}

// === –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ ===
function showRecommendations() {
    const recommendationsContainer = document.getElementById("recommendations");
    recommendationsContainer.innerHTML = '';
    
    const selectedOptions = getSelectedOptions();
    const shownRecommendations = new Set();
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∂–¥—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    Object.keys(recommendationsConfig).forEach(key => {
        const config = recommendationsConfig[key];
        
        config.triggers.forEach(trigger => {
            const [question, value] = trigger.split('_');
            const optionId = `input[name="${question}"][value="${value}"]`;
            const option = document.querySelector(optionId);
            
            if (option && !option.checked && !shownRecommendations.has(key)) {
                const recElement = document.createElement('div');
                recElement.className = 'recommendation';
                recElement.innerHTML = `
                    <p>${config.message}</p>
                    <button onclick="handleRecommendationAction('${key}')" 
                            class="btn-action">${config.action}</button>
                `;
                recommendationsContainer.appendChild(recElement);
                shownRecommendations.add(key);
            }
        });
    });
}

// === –ü–æ–ª—É—á–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ ===
function getSelectedOptions() {
    const selected = {};
    document.querySelectorAll('input[type="checkbox"]:checked').forEach(checkbox => {
        const name = checkbox.getAttribute('name');
        const value = checkbox.value;
        if (!selected[name]) selected[name] = [];
        selected[name].push(value);
    });
    return selected;
}

// === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ===
function handleRecommendationAction(actionType) {
    switch(actionType) {
        case 'no_sorting':
        case 'no_recycling':
            openTab('ecoMap');
            showRecyclingPoints();
            break;
        case 'high_energy':
            alert('–≠–∫–æ–Ω–æ–º–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ –µ—ë –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ —Å–∂–∏–≥–∞—é—Ç—Å—è –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø–æ–ø–∞–¥–∞—é—Ç –≤—Ä–µ–¥–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã. –ö–æ–≥–¥–∞ –º—ã –≤—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç –∏ –ø—Ä–∏–±–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–µ –ø–æ–ª—å–∑—É–µ–º—Å—è, –º—ã —É–º–µ–Ω—å—à–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É –∏ —Å–æ–∫—Ä–∞—â–∞–µ–º —Å—á–µ—Ç–∞ –∑–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ. –ú–∞–ª–µ–Ω—å–∫–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–æ–ª—å—à–∏–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ.');
            break;
        case 'meat_daily':
            alert('–ü–æ–∫—É–ø–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –º–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –æ–±—ã—á–Ω–æ —Å–≤–µ–∂–∏–µ, –ø–æ–ª–µ–∑–Ω–µ–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ñ–µ—Ä–º–µ—Ä–æ–≤ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ –Ω–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ. –¢–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω—É–∂–Ω–æ –≤–µ–∑—Ç–∏ –∏–∑–¥–∞–ª–µ–∫–∞, –∑–Ω–∞—á–∏—Ç, —Ç—Ä–∞—Ç–∏—Ç—Å—è –º–µ–Ω—å—à–µ —Ç–æ–ø–ª–∏–≤–∞ –∏ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø–æ–ø–∞–¥–∞–µ—Ç –º–µ–Ω—å—à–µ –≤—Ä–µ–¥–Ω—ã—Ö –≤—ã–±—Ä–æ—Å–æ–≤. –ö–æ–≥–¥–∞ –º—ã –≤—ã–±–∏—Ä–∞–µ–º –º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –º—ã –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–±–æ—Ç–∏–º—Å—è –æ —Å–≤–æ—ë–º –∑–¥–æ—Ä–æ–≤—å–µ, –Ω–æ –∏ –ø–æ–º–æ–≥–∞–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ —Å—Ç—Ä–∞–Ω—ã.!');
            break;
        case 'big_car':
            alert('–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±—ã –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—å—à–µ –≤—Å–µ–≥–æ –∑–∞–≥—Ä—è–∑–Ω—è—é—Ç –æ–∫—Ä—É–∂–∞—é—â—É—é —Å—Ä–µ–¥—É. –ö —Ç–∞–∫–∏–º –≤–∏–¥–∞–º –æ—Ç–Ω–æ—Å—è—Ç –ø–µ—à–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏, –≤–µ–ª–æ—Å–∏–ø–µ–¥, —ç–ª–µ–∫—Ç—Ä–æ—Å–∞–º–æ–∫–∞—Ç—ã, —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏ –∏, –∫–æ–Ω–µ—á–Ω–æ, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–æ–∑–∏—Ç —Å—Ä–∞–∑—É –º–Ω–æ–≥–æ –ª—é–¥–µ–π –∏ —Ç–µ–º —Å–∞–º—ã–º —Å–Ω–∏–∂–∞–µ—Ç –≤—ã–±—Ä–æ—Å—ã –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–∞.

–õ—É—á—à–µ –≤—Å–µ–≥–æ –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ —Ö–æ–¥—å–±–µ –∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥—É –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è, –∞ –≤ –≥–æ—Ä–æ–¥–µ —á–∞—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–±—É—Å–∞–º–∏, –º–µ—Ç—Ä–æ –∏–ª–∏ —Ç—Ä–∞–º–≤–∞—è–º–∏. –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –∞–≤—Ç–æ–º–æ–±–∏–ª—å, —ç–∫–æ–ª–æ–≥–∏—á–Ω–µ–µ –≤—ã–±–∏—Ä–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å –∏–ª–∏ –≥–∏–±—Ä–∏–¥. –ß–µ–º –±–æ–ª—å—à–µ –ª—é–¥–µ–π –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –Ω–∞ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Ç–µ–º —á–∏—â–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–æ–∑–¥—É—Ö –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Å–∞–º–∞ –≥–æ—Ä–æ–¥—Å–∫–∞—è —Å—Ä–µ–¥–∞.');
            break;
    }
}

// === –°–±—Ä–æ—Å —Ç–µ—Å—Ç–∞ ===
function resetTest() {
    // –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ checkbox
    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
        checkbox.checked = false;
        checkbox.disabled = false;
    });
    
    // –°–±—Ä–æ—Å–∏—Ç—å –∫–ª–∞—Å—Å—ã completed
    document.querySelectorAll('.question').forEach(question => {
        question.classList.remove('completed');
    });
    
    // –°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    document.getElementById("result").textContent = "0 –±–∞–ª–ª–æ–≤";
    document.getElementById("resultText").textContent = "";
    document.getElementById("resultBox").style.display = "none";
    document.getElementById("recommendations").innerHTML = "";
}

// === –ö–∞—Ä—Ç–∞ —Å –ø—É–Ω–∫—Ç–∞–º–∏ –ø—Ä–∏–µ–º–∞ ===
let recyclingPoints = [];
let mapInitialized = false;

function initMap() {
    if (mapInitialized) return;
    mapInitialized = true;

    const map = L.map("map").setView([43.238949, 76.889709], 12); // –ê–ª–º–∞—Ç—ã

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "&copy; OpenStreetMap contributors"
    }).addTo(map);

    // –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä–∫–µ—Ä
    L.marker([43.238949, 76.889709]).addTo(map)
        .bindPopup("–ê–ª–º–∞—Ç—ã ‚Äî —ç–∫–æ—Å–∏—Ç—É–∞—Ü–∏—è –≥–æ—Ä–æ–¥–∞")
        .openPopup();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–∏–µ–º–∞ –∏–∑ localStorage
    loadRecyclingPoints(map);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–æ—á–µ–∫
    map.on('click', function(e) {
        addNewRecyclingPoint(e.latlng, map);
    });
    
    window.currentMap = map;
}

// === –ó–∞–≥—Ä—É–∑–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–∏–µ–º–∞ ===
function loadRecyclingPoints(map) {
    const savedPoints = JSON.parse(localStorage.getItem('recyclingPoints')) || [];
    
    savedPoints.forEach(point => {
        addPointToMap(point, map);
    });
}

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É ===
function addPointToMap(point, map) {
    const marker = L.marker([point.lat, point.lng])
        .addTo(map)
        .bindPopup(`
            <b>${point.name || '–ü—É–Ω–∫—Ç –ø—Ä–∏–µ–º–∞'}</b><br>
            ${point.description || ''}<br>
            ${point.price ? `–¶–µ–Ω–∞: ${point.price}` : ''}
        `);
    
    recyclingPoints.push({
        marker: marker,
        data: point
    });
}

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–æ—á–∫–∏ ===
function addNewRecyclingPoint(latlng, map) {
    const name = prompt('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ –ø—Ä–∏–µ–º–∞:');
    if (!name) return;
    
    const description = prompt('–ß—Ç–æ –ø—Ä–∏–Ω–∏–º–∞—é—Ç (–ø–ª–∞—Å—Ç–∏–∫, —Å—Ç–µ–∫–ª–æ, –±—É–º–∞–≥–∞ –∏ —Ç.–¥.):');
    const price = prompt('–¶–µ–Ω–∞ –∑–∞ –∫–≥ (–µ—Å–ª–∏ –µ—Å—Ç—å):');
    
    const newPoint = {
        id: Date.now(),
        lat: latlng.lat,
        lng: latlng.lng,
        name: name,
        description: description,
        price: price,
        addedBy: 'user'
    };
    
    addPointToMap(newPoint, map);
    savePoints();
}

// === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ—á–µ–∫ ===
function savePoints() {
    const pointsData = recyclingPoints.map(p => p.data);
    localStorage.setItem('recyclingPoints', JSON.stringify(pointsData));
}

// === –ü–æ–∫–∞–∑–∞—Ç—å –ø—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ ===
function showRecyclingPoints() {
    if (window.currentMap && recyclingPoints.length > 0) {
        recyclingPoints.forEach(point => {
            point.marker.openPopup();
        });
    } else {
        alert('–ü—É–Ω–∫—Ç—ã –ø—Ä–∏–µ–º–∞ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç—É');
    }
}

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ===
document.addEventListener("DOMContentLoaded", function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –≤ HTML
    const testForm = document.getElementById('ecoTestForm');
    if (testForm && !document.getElementById('finishTest')) {
        const finishButton = document.createElement('div');
        finishButton.className = 'test-actions';
        finishButton.innerHTML = '<button type="button" id="finishTest" class="btn-primary">–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç</button>';
        testForm.appendChild(finishButton);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    const resultBox = document.getElementById('resultBox');
    if (resultBox && !document.getElementById('recommendations')) {
        const recommendationsDiv = document.createElement('div');
        recommendationsDiv.id = 'recommendations';
        resultBox.appendChild(recommendationsDiv);
    }
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Å—Ç–æ–ª–±–∏–∫
    document.querySelectorAll('.question').forEach(question => {
        const labels = question.querySelectorAll('label');
        const optionsColumn = document.createElement('div');
        optionsColumn.className = 'options-column';
        
        labels.forEach(label => {
            optionsColumn.appendChild(label.cloneNode(true));
        });
        
        question.innerHTML = question.querySelector('p').outerHTML + optionsColumn.outerHTML;
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Å—Ç
    initTest();
});
